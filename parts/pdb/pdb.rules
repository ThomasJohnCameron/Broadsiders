Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/PointDefenseBeamTurret"
	IconNameKey = "Parts/PointDefenseBeamTurretIcon"
	ID = dondelium.point_defense_beam_turret // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	OtherIDs = [point_defense_beam_turret]
	EditorGroups = ["WeaponsEnergy", "Defenses"]
	DescriptionKey = "Parts/PointDefenseBeamTurretDesc"
	Resources
	[
		[steel, 60]
		[coil2, 12]
		[diamond, 1]
	]
	Size = [2, 2]
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 6000
	TypeCategories = [defense, uses_power, is_crewed, ion]
	ReceivableBuffs : ^/0/ReceivableBuffs []
	ProhibitedBy : ^/0/ProhibitedBy [tall]
	CrewSpeedFactor = 1
	AllowedDoorLocations
	[
		[-1, 1]
		[2, 1]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [42.66, 42.66]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 2
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

		FirePrefToggle
		{
			Type = UIToggle
			ToggleID = "fire_pref"
			Default = 1
		}
		FirePrefAttack
		{
			Type = ModeToggle
			Mode = FirePrefToggle
			OnModes = [0, 2]
		}
		FirePrefDefend
		{
			Type = ModeToggle
			Mode = FirePrefToggle
			OnModes = [1, 2]
		}
		AttackToggle
		{
			Type = MultiToggle
			Toggles = [AutoTargetToggle, FirePrefAttack]
			Mode = All
		}
		DefendToggle
		{
			Type = MultiToggle
			Toggles = [AutoTargetToggle, FirePrefDefend]
			Mode = All
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 4000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			ResupplyThreshold = 100
			DefaultPriority = &/PRIORITIES/Defense_Supply
			OperationalToggle = PowerToggle
		}

		Graphics
		{
			Type = Graphics
			Location = [1, 1]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 2]
					}
					{
						File = "floor_33.png"
						Size = [2, 2]
					}
					{
						File = "floor_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.15
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [2, 2]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 2]
					}
					{
						File = "walls_33.png"
						Size = [2, 2]
					}
					{
						File = "walls_66.png"
						Size = [2, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [2, 2]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "roof_glows.png"
						Size = [2, 2]
					}
					{
						File = "roof_glows_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_glows_66.png"
						Size = [2, 2]
					}
				]
			}
		}

		OperatingHum
		{
			Type = ContinuousEffects
			Location = [1, 1]
			OperationalToggle = IsOperational
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "./Data/ships/terran/ion_beam_emitter/operating.wav"
					Volume = .2
					Speed = 2
					MaxConcurrent = 1
					MaxConcurrentVolume = .1
				}
			]
		}

		CrewLocation
		{
			Type = CrewLocation
			Location = [1, 50/64]
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 1
			DefaultPriority = &<./Data/ships/base_ship.rules>/DefaultSalvagePriority
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				&../../CrewLocation/Location
			]
			CrewLocations
			[
				CrewLocation
			]
		}

		Turret
		{
			Type = TurretWeapon
			Location = [1, 1.2]
			Rotation = -90d
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = .2
			FiringArc = 180d
			RotateSpeed = 150d
			FireThresholdAngle = 3d
			AIFirepowerRating = 400
			CanBeGivenExplicitTarget = false
			Emitter = BeamEmitter
			TargetPathThickness = .05
			EstimateFirepowerToggle = AttackToggle
			AlwaysShowCoverage = true
			FirePermissionToggle = FireModeToggle
			AutoTargetCrewSafetyDist = 8
			IgnoreFriendlyShipLowLOSChecks = true
			IgnoreJunkLOSChecks = true
			ReturnToCenter = false
			TargetSearchesPerSecond = 4
			InstantSearchesAfterTargetLost = 2
			TargetChecksPerSearch = 2
			//PreventOverlappingTargets = true

			AutoTargets
			[
				{
					TargetType = Bullets
					BulletTargetCategories = [missile_nuke_stage2, missile_nuke_stage1, torpedo, anti, missile, mine_deployed, mine]
					Toggle = DefendToggle
				}
//				{
//					TargetType = Crew
//					Toggle = AttackToggle
//				}
				{
					TargetType = ShipParts
					Toggle = AttackToggle
					Overridable = true
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		BeamEmitter : &<../../shots/pd_beam/pdb_beam.rules>
		{
			Type = BeamEmitter
			ChainedTo = Turret
			GetTargetFrom = Turret
			FireTrigger = Turret
			Location = [0.5, 0]
			OperationalToggle = IsOperational
			Duration = .5
			ResourceStorage = BatteryStorage
			ResourcesUsed = 45
			MinResourcesUsed = 45
			SourceShipLowCollisions = false

			BeamMediaEffects : ^/0/BeamMediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "./Data/shots/ion_beam/ion_beam_emit.wav"
					Volume = 0.5
					MaxConcurrent = 1
					MaxConcurrentVolume = 1
					RampUpTime = .05
					RampDownTime = .2
				}
			]
		}

		TurretGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			Rotation = 90d
			OperationalToggle = IsOperational
			DoodadToggle = BeamEmitter
			ShowToggledDoodadsWhenNotOperational = false

			Floor
			{
				Layer = "roof_turrets"
				DamageLevels
				[
					{
						File = "weapon_off.png"
						NormalsFile = "weapon_normals.png"
						Size = [2, 2]
					}
					{
						File = "weapon_off_33.png"
						NormalsFile = "weapon_normals.png"
						Size = [2, 2]
					}
					{
						File = "weapon_off_66.png"
						NormalsFile = "weapon_normals.png"
						Size = [2, 2]
					}
				]
			}
			ToggleOnDoodad
			{
				Layer = "roof_turrets"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"weapon_shooting_on1.png"
							"weapon_shooting_on2.png"
							"weapon_shooting_on3.png"
							"weapon_shooting_on4.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.05
						AnimationStartTime = Zero
					}
				]
			}
			ToggleOffDoodad
			{
				Layer = "roof_turrets"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"weapon_on_idle1.png"
							"weapon_on_idle2-8.png"
							"weapon_on_idle3-7.png"
							"weapon_on_idle4-6.png"
							"weapon_on_idle3-7.png"
							"weapon_on_idle2-8.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.15
						AnimationStartTime = Zero
					}
				]
			}
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1, 1]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [2, 2]
				}
				{
					File = "batteries2.png"
					Size = [2, 2]
				}
				{
					File = "batteries3.png"
					Size = [2, 2]
				}
				{
					File = "batteries4.png"
					Size = [2, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, 1]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 1]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					Delay = &~/Part/Components/Turret/FireInterval
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 2]
		}
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = &../StatsByCategory/0/Stats/PowerUsageContinuous
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}

	StatsByCategory
	[
		{
			NameKey = "StatCategories/IonBeam"
			Stats
			{
				HitInterval = &~/Part/Components/BeamEmitter/HitInterval
        NearScaler = &~/Part/Components/BeamEmitter/HitEffectsScaleOverRange/0
        FarScaler = &~/Part/Components/BeamEmitter/HitEffectsScaleOverRange/1

				BaseDamage = &~/Part/Components/BeamEmitter/HitOperational/HitEffects/0/Damage
				DamageContinuousNear = (&BaseDamage) * (&NearScaler) / (&HitInterval)
				DamageContinuousFar = (&BaseDamage) * (&FarScaler) / (&HitInterval)
				ShotBaseDamage = &~/Part/Components/BeamEmitter/HitNothing/HitEffects/0/TotalDamage
        ShotDamageNear =  (&ShotBaseDamage) * (&NearScaler) / (&HitInterval)
        ShotDamageFar =  (&ShotBaseDamage) * (&FarScaler) / (&HitInterval)

				Range = &~/Part/Components/BeamEmitter/Range
				Arc = deg(&~/Part/Components/Turret/FiringArc)
				TurretSpeed = deg(&~/Part/Components/Turret/RotateSpeed)
				ShotSpeed = Infinity
				PowerPerShot = (&~/Part/Components/BeamEmitter/ResourcesUsed) / 1000
				PowerUsageContinuous = (&PowerPerShot) / (&HitInterval)
			}
		}
	]
}
